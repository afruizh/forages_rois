# -*- coding: utf-8 -*-

"""
/***************************************************************************
 ForagesROIs
                                 A QGIS plugin
 Detection, classification and grid generation for forages
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2025-05-14
        copyright            : (C) 2025 by Andres Felipe Ruiz-Hurtado, Tropical Forages Program CIAT
        email                : a.f.ruiz@cgiar.org
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

__author__ = 'Andres Felipe Ruiz-Hurtado, Tropical Forages Program CIAT'
__date__ = '2025-05-14'
__copyright__ = '(C) 2025 by Andres Felipe Ruiz-Hurtado, Tropical Forages Program CIAT'

# This will get replaced with a git SHA1 when you do a git archive

__revision__ = '$Format:%H$'

import os
import sys
import inspect

from qgis.PyQt.QtGui import QIcon
from qgis.PyQt.QtWidgets import QAction
from qgis.utils import iface

from qgis.core import QgsProcessingAlgorithm, QgsApplication
from .ForagesROIs_provider import ForagesROIsProvider

cmd_folder = os.path.split(inspect.getfile(inspect.currentframe()))[0]

if cmd_folder not in sys.path:
    sys.path.insert(0, cmd_folder)


class ForagesROIsPlugin(object):

    def __init__(self):
        self.provider = None
        self.action = None

        self.iface = iface

        self.toolbar = self.iface.addToolBar(u'ForagesROIs')
        self.toolbar.setObjectName(u'ForagesROIs')

    def initProcessing(self):
        """Init Processing provider for QGIS >= 3.8."""
        self.provider = ForagesROIsProvider()
        QgsApplication.processingRegistry().addProvider(self.provider)

    def initGui(self):
        self.initProcessing()

        self.plugin_dir = os.path.dirname(__file__)

        # Add toolbar icon
        icon_path = os.path.join(self.plugin_dir, 'icon.png')
        icon = QIcon(icon_path)
        self.action = QAction(icon, "Run ForagesROIs", iface.mainWindow())
        self.action.triggered.connect(self.run_algorithm)
        self.toolbar.addAction(self.action)

        # # Add Plot Enumeration action
        # self.action_plot_enum = QAction(icon, "Plot Enumeration", iface.mainWindow())
        # self.action_plot_enum.triggered.connect(self.run_plot_enumeration)
        # self.toolbar.addAction(self.action_plot_enum)

    def unload(self):
        QgsApplication.processingRegistry().removeProvider(self.provider)

        if self.action:
            iface.removeToolBarIcon(self.action)
        if hasattr(self, 'action_plot_enum') and self.action_plot_enum:
            iface.removeToolBarIcon(self.action_plot_enum)

    def run_algorithm(self):
        # Open the processing dialog for your algorithm
        from qgis import processing
        processing.execAlgorithmDialog('ForagesROIs:ForagesROIs')

    def run_plot_enumeration(self):
        from qgis import processing
        processing.execAlgorithmDialog('ForagesROIs:plot_enumeration')
